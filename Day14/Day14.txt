Day14 Exercise

--Create the tables and Insert the Quires

CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY,
    FirstName NVARCHAR(50),
    LastName NVARCHAR(50)
);

INSERT INTO Customers (CustomerID, FirstName, LastName)
VALUES
    (101, 'John', 'Doe'),
    (102, 'Jane', 'Smith'),
    (103, 'Alice', 'Johnson'),
    (107, 'Sarah', 'Williams'),
    (108, 'David', 'Miller'),
    (109, 'Sophia', 'Brown');

CREATE TABLE Products (
    ProductID INT PRIMARY KEY,
    ProductName NVARCHAR(50),
    UnitPrice DECIMAL(10, 2)
);

INSERT INTO Products (ProductID, ProductName, UnitPrice)
VALUES
    (1, 'Product A', 50.00),
    (2, 'Product B', 75.00),
    (3, 'Product C', 100.00),
    (4, 'Product D', 'Electronics', 700.00),
    (5, 'Product E', 'Clothing', 45.00),
    (6, 'Product F', 'Books', 25.00);

CREATE TABLE Orders (
    OrderID INT PRIMARY KEY,
    CustomerID INT,
    ProductID INT,
    OrderDate DATE,
    Quantity INT
);

INSERT INTO Orders (OrderID, CustomerID, ProductID, OrderDate, Quantity)
VALUES
    (1, 101, 1, '2024-03-14', 5),
    (2, 102, 2, '2024-03-15', 3),
    (3, 103, 3, '2024-03-16', 2),
    (4, 101, 1, '2024-03-17', 4),
    (5, 102, 2, '2024-03-17', 6),
    (6, 101, 3, '2024-03-18', 7),
    (7, 107, 1, '2024-03-22', 2, 1000.00),
    (8, 108, 2, '2024-03-23', 5, 225.00),
    (9, 109, 3, '2024-03-24', 3, 75.00),
    (10, 107, 4, '2024-03-25', 1, 700.00),
    (11, 108, 5, '2024-03-26', 2, 90.00),
    (12, 109, 6, '2024-03-27', 4, 100.00);


--Solve the questions based on the tables


1. Query 1: Retrieve the total quantity and revenue generated by each product, 
only including products with total revenue greater than $200. Order the results by 
revenue in descending order.

2. Query 2: Retrieve the total quantity and revenue generated by each customer, 
only including customers with a total amount greater than $300. Order the results by 
revenue in descending order.

3. Query 3: Retrieve the total quantity and revenue generated by each product, only 
including products where the average unit price is greater than $70. Order the results by 
quantity in descending order.

4. Query 4: Retrieve the total quantity and revenue generated by each customer, only 
including customers who have ordered more than one product. Order the results by 
quantity in descending order.

5. Query 5: Retrieve the total quantity and revenue generated by each product, 
only including products where the total quantity sold is greater than 10. Order 
the results by revenue in descending order.

6. Query 6: Retrieve the total quantity and revenue generated by each customer, 
only including customers who have ordered a product with a unit price greater than $80.
Order the results by revenue in descending order.

7. Query 7: Retrieve the total quantity and revenue generated by each product, 
only including products where the total revenue is greater than $500 and the total 
quantity sold is greater than 5. Order the results by revenue in descending order.

8. Query 8: Retrieve the total quantity and revenue generated by each customer, 
only including customers who have ordered a product with a unit price less than $70. 
Order the results by revenue in descending order.

9. Query 9: Retrieve the total quantity and revenue generated by each product, 
only including products where the maximum unit price is greater than $90. Order the 
results by revenue in descending order.

10. Query 10: Retrieve the total quantity and revenue generated by each customer, 
only including customers who have ordered a product with a unit price less than $60. 
Order the results by revenue in descending order.

