Day 21 Exercise:

-- Table creation script for Employees
CREATE TABLE Employees (
    EmployeeID INT PRIMARY KEY,
    Name VARCHAR(50),
    DepartmentID INT,
    Salary DECIMAL(10,2),  
    ManagerID INT,         
    JoinDate DATE,         
    Role VARCHAR(50)       
);

-- Table creation script for Departments
CREATE TABLE Departments (
    DepartmentID INT PRIMARY KEY,
    DepartmentName VARCHAR(50),
    ManagerID INT         
);

-- Insert statements for Employees
INSERT INTO Employees (EmployeeID, Name, DepartmentID, Salary, ManagerID, JoinDate, Role) VALUES
(1, 'John', 1, 50000.00, 101, '2020-01-15', 'HR Assistant'),
(2, 'Alice', 1, 60000.00, 101, '2019-05-20', 'HR Manager'),
(3, 'Bob', 2, 55000.00, 102, '2018-10-10', 'Financial Analyst'),
(4, 'Mary', 2, 65000.00, 102, '2021-02-28', 'Financial Manager'),
(5, 'David', 1, 52000.00, 101, '2017-09-12', 'HR Assistant'),
(6, 'Emily', 1, 62000.00, 101, '2016-03-25', 'HR Specialist'),
(7, 'Michael', 1, 58000.00, 101, '2019-11-30', 'HR Coordinator'),
(8, 'Sophia', 2, 70000.00, 102, '2020-07-05', 'Financial Analyst'),
(9, 'James', 2, 60000.00, 102, '2018-08-15', 'Financial Analyst'),
(10, 'Emma', 2, 72000.00, 102, '2019-04-18', 'Financial Analyst'),
(11, 'William', 1, 54000.00, 101, '2017-06-20', 'HR Assistant'),
(12, 'Olivia', 2, 68000.00, 102, '2018-12-22', 'Financial Manager'),
(13, 'Benjamin', 1, 63000.00, 101, '2020-03-10', 'HR Specialist'),
(14, 'Ava', 1, 59000.00, 101, '2016-11-08', 'HR Coordinator'),
(15, 'Daniel', 2, 66000.00, 102, '2017-04-05', 'Financial Analyst');

-- Insert statements for Departments
INSERT INTO Departments (DepartmentID, DepartmentName, ManagerID) VALUES
(1, 'HR', 101),
(2, 'Finance', 102),
(3, 'IT', 103),
(4, 'Marketing', 104),
(5, 'Operations', 105);



Questions:

1.Write a SQL query to retrieve all possible combinations of employee names and department names.
2.Find the total number of combinations generated by the CROSS JOIN between the Employees and Departments tables.
3.List all employees along with their respective departments using a CROSS JOIN.
4.Count the total number of employees in each department using a CROSS JOIN.
5.Retrieve the names of employees who are not associated with any department using a CROSS JOIN.
6.Write a SQL query to find all pairs of employees who work in the same department.
7.Find the names of employees who have the same name as another employee in the same department.
8.Retrieve the names of employees who have a higher EmployeeID than any other employee in the same department.
9.List all employees along with the names of employees in the same department but with higher EmployeeID.
10.Find the names of employees who don't have any other employee with a higher EmployeeID in the same department.

1.Write a SQL query to generate a report showing all possible combinations of employee names and department names, along with the total number of employees in each department.
2.Calculate the total salary expense for each combination of employee and department, assuming each employee has a fixed salary.
3.Find the departments where every employee has a higher EmployeeID than any employee in any other department.
4.Retrieve the names of departments where the number of employees is greater than the number of distinct department names.
5.Identify the pairs of employees who work in different departments but have the same name.
6.Write a SQL query to find all pairs of employees who work in different departments but have the same manager.
7.Calculate the average salary of employees who have at least one colleague with a lower salary in the same department.
8.Find the names of employees who are not managers but have the same manager as another employee.
9.Retrieve the names of employees who have the same manager and belong to the same department but have different roles.
10.Identify the pairs of employees who have the same manager and started working on the same date but belong to different departments.